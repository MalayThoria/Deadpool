{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\Tsunade\\\\Tsunade\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('access_token'));\n\n  // Set up axios interceptor for authentication\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(config => {\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n\n    // Response interceptor to handle token expiration\n    const responseInterceptor = axios.interceptors.response.use(response => response, async error => {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && token) {\n        // Token expired, try to refresh\n        const refreshToken = localStorage.getItem('refresh_token');\n        if (refreshToken) {\n          try {\n            const response = await axios.post(`${API_BASE_URL}/auth/refresh`, {\n              refresh_token: refreshToken\n            });\n            const newToken = response.data.access_token;\n            setToken(newToken);\n            localStorage.setItem('access_token', newToken);\n            // Retry the original request\n            error.config.headers.Authorization = `Bearer ${newToken}`;\n            return axios.request(error.config);\n          } catch (refreshError) {\n            // Refresh failed, logout user\n            logout();\n          }\n        } else {\n          logout();\n        }\n      }\n      return Promise.reject(error);\n    });\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n  }, [token]);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const response = await axios.get(`${API_BASE_URL}/users/me`);\n          setUser(response.data);\n        } catch (error) {\n          // Token is invalid, remove it\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const formData = new FormData();\n      formData.append('username', email);\n      formData.append('password', password);\n      const response = await axios.post(`${API_BASE_URL}/auth/jwt/login`, formData, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      const {\n        access_token,\n        token_type\n      } = response.data;\n\n      // Get user data after successful login\n      const userResponse = await axios.get(`${API_BASE_URL}/users/me`, {\n        headers: {\n          'Authorization': `Bearer ${access_token}`\n        }\n      });\n      setUser(userResponse.data);\n      setToken(access_token);\n      localStorage.setItem('access_token', access_token);\n      // Note: FastAPI Users JWT endpoint doesn't provide refresh token by default\n\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\n      toast.success('Registration successful! Please check your email to verify your account.');\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    toast.success('Logged out successfully');\n  };\n  const forgotPassword = async email => {\n    try {\n      await axios.post(`${API_BASE_URL}/auth/forgot-password`, {\n        email\n      });\n      toast.success('Password reset email sent!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || 'Failed to send reset email';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const resetPassword = async (token, password) => {\n    try {\n      await axios.post(`${API_BASE_URL}/auth/reset-password`, {\n        token,\n        password\n      });\n      toast.success('Password reset successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.detail) || 'Password reset failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await axios.patch(`${API_BASE_URL}/users/me`, profileData);\n      setUser(response.data);\n      toast.success('Profile updated successfully!');\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      const message = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.detail) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated: !!user,\n    login,\n    register,\n    logout,\n    forgotPassword,\n    resetPassword,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"iLfp0PmYEDeRPgw2fDRN/H5TOIo=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","API_BASE_URL","process","env","REACT_APP_API_URL","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","interceptor","interceptors","request","use","config","headers","Authorization","error","Promise","reject","responseInterceptor","response","_error$response","status","refreshToken","post","refresh_token","newToken","data","access_token","setItem","refreshError","logout","eject","checkAuth","get","removeItem","login","email","password","formData","FormData","append","token_type","userResponse","success","_error$response2","_error$response2$data","message","detail","register","userData","_error$response3","_error$response3$data","forgotPassword","_error$response4","_error$response4$data","resetPassword","_error$response5","_error$response5$data","updateProfile","profileData","patch","_error$response6","_error$response6$data","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/Tsunade/Tsunade/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('access_token'));\n\n  // Set up axios interceptor for authentication\n  useEffect(() => {\n    const interceptor = axios.interceptors.request.use(\n      (config) => {\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => {\n        return Promise.reject(error);\n      }\n    );\n\n    // Response interceptor to handle token expiration\n    const responseInterceptor = axios.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        if (error.response?.status === 401 && token) {\n          // Token expired, try to refresh\n          const refreshToken = localStorage.getItem('refresh_token');\n          if (refreshToken) {\n            try {\n              const response = await axios.post(`${API_BASE_URL}/auth/refresh`, {\n                refresh_token: refreshToken\n              });\n              const newToken = response.data.access_token;\n              setToken(newToken);\n              localStorage.setItem('access_token', newToken);\n              // Retry the original request\n              error.config.headers.Authorization = `Bearer ${newToken}`;\n              return axios.request(error.config);\n            } catch (refreshError) {\n              // Refresh failed, logout user\n              logout();\n            }\n          } else {\n            logout();\n          }\n        }\n        return Promise.reject(error);\n      }\n    );\n\n    return () => {\n      axios.interceptors.request.eject(interceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n  }, [token]);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const response = await axios.get(`${API_BASE_URL}/users/me`);\n          setUser(response.data);\n        } catch (error) {\n          // Token is invalid, remove it\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, [token]);\n\n  const login = async (email, password) => {\n    try {\n      const formData = new FormData();\n      formData.append('username', email);\n      formData.append('password', password);\n\n      const response = await axios.post(`${API_BASE_URL}/auth/jwt/login`, formData, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n\n      const { access_token, token_type } = response.data;\n      \n      // Get user data after successful login\n      const userResponse = await axios.get(`${API_BASE_URL}/users/me`, {\n        headers: {\n          'Authorization': `Bearer ${access_token}`\n        }\n      });\n      \n      setUser(userResponse.data);\n      setToken(access_token);\n      localStorage.setItem('access_token', access_token);\n      // Note: FastAPI Users JWT endpoint doesn't provide refresh token by default\n      \n      toast.success('Login successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.detail || 'Login failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/register`, userData);\n      \n      toast.success('Registration successful! Please check your email to verify your account.');\n      return { success: true, data: response.data };\n    } catch (error) {\n      const message = error.response?.data?.detail || 'Registration failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    toast.success('Logged out successfully');\n  };\n\n  const forgotPassword = async (email) => {\n    try {\n      await axios.post(`${API_BASE_URL}/auth/forgot-password`, { email });\n      toast.success('Password reset email sent!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.detail || 'Failed to send reset email';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const resetPassword = async (token, password) => {\n    try {\n      await axios.post(`${API_BASE_URL}/auth/reset-password`, {\n        token,\n        password\n      });\n      toast.success('Password reset successful!');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.detail || 'Password reset failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const updateProfile = async (profileData) => {\n    try {\n      const response = await axios.patch(`${API_BASE_URL}/users/me`, profileData);\n      setUser(response.data);\n      toast.success('Profile updated successfully!');\n      return { success: true, data: response.data };\n    } catch (error) {\n      const message = error.response?.data?.detail || 'Profile update failed';\n      toast.error(message);\n      return { success: false, error: message };\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    isAuthenticated: !!user,\n    login,\n    register,\n    logout,\n    forgotPassword,\n    resetPassword,\n    updateProfile\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}