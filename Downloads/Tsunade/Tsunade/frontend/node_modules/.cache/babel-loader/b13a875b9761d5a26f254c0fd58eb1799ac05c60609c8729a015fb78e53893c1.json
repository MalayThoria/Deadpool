{"ast":null,"code":"import React,{useState,useEffect}from'react';import{motion,AnimatePresence}from'framer-motion';import{Toaster,toast}from'react-hot-toast';import axios from'axios';import'./styles/mobile.css';import{AuthProvider}from'./contexts/AuthContext';import AuthModal from'./components/AuthModal';import ProtectedRoute from'./components/ProtectedRoute';import Header from'./components/Header';import Navigation from'./components/Navigation';import ChatBox from'./components/ChatBox';import ChatInput from'./components/ChatInput';import UploadCard from'./components/UploadCard';import MedicineCard from'./components/MedicineCard';import MedicineCorrectionCard from'./components/MedicineCorrectionCard';import ExerciseRecommendations from'./components/ExerciseRecommendations';import Dashboard from'./components/Dashboard';import Profile from'./components/Profile';import Privacy from'./components/Privacy';import VoiceInterface from'./components/VoiceInterface';import ExercisePlanner from'./components/ExercisePlanner';import{Bot,FileText,AlertCircle,AlertTriangle,Activity}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000/api/v1';function App(){const[currentPage,setCurrentPage]=useState('chat');const[isDarkMode,setIsDarkMode]=useState(false);const[deferredPrompt,setDeferredPrompt]=useState(null);const[showInstallPrompt,setShowInstallPrompt]=useState(false);const[messages,setMessages]=useState([]);const[isTyping,setIsTyping]=useState(false);const[isProcessing,setIsProcessing]=useState(false);const[medicines,setMedicines]=useState([]);const[medicineCorrections,setMedicineCorrections]=useState([]);const[extractedText,setExtractedText]=useState('');const[isChatProcessing,setIsChatProcessing]=useState(false);const[showExerciseRecommendations,setShowExerciseRecommendations]=useState(false);const[currentPrescriptionFile,setCurrentPrescriptionFile]=useState(null);const[showAuthModal,setShowAuthModal]=useState(false);const[authModalMode,setAuthModalMode]=useState('login');// Dark mode effect\nuseEffect(()=>{if(isDarkMode){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}},[isDarkMode]);// PWA install prompt handling\nuseEffect(()=>{const handleBeforeInstallPrompt=e=>{e.preventDefault();setDeferredPrompt(e);setShowInstallPrompt(true);};window.addEventListener('beforeinstallprompt',handleBeforeInstallPrompt);return()=>{window.removeEventListener('beforeinstallprompt',handleBeforeInstallPrompt);};},[]);// Auth modal event handling\nuseEffect(()=>{const handleOpenAuthModal=event=>{const{mode}=event.detail||{};setAuthModalMode(mode||'login');setShowAuthModal(true);};window.addEventListener('openAuthModal',handleOpenAuthModal);return()=>{window.removeEventListener('openAuthModal',handleOpenAuthModal);};},[]);const toggleDarkMode=()=>{setIsDarkMode(!isDarkMode);};const addMessage=(sender,content)=>{const newMessage={sender,content,timestamp:new Date().toISOString()};setMessages(prev=>[...prev,newMessage]);};const processPrescription=async file=>{setIsProcessing(true);setIsTyping(true);try{// Add user message\naddMessage('user',`Uploaded prescription: ${file.name}`);// Step 1: Extract text using OCR\nconst formData=new FormData();formData.append('file',file);const ocrResponse=await axios.post(`${API_BASE_URL}/ocr`,formData,{headers:{'Content-Type':'multipart/form-data'}});if(!ocrResponse.data.success){throw new Error(ocrResponse.data.message);}const extractedText=ocrResponse.data.text;setExtractedText(extractedText);// Add AI message about OCR\naddMessage('ai',`I've extracted the text from your prescription. Found ${extractedText.split(' ').length} words.`);// Step 2: Extract medicine names\nconst medsResponse=await axios.post(`${API_BASE_URL}/extract-meds`,{prescription_text:extractedText});if(!medsResponse.data.success){throw new Error('Could not identify medicines in the prescription');}const medicineData=medsResponse.data.medicines;const medicineNames=medicineData.map(med=>med.corrected);// Store correction data for display\nsetMedicineCorrections(medicineData);// Add AI message about medicines found with corrections\nlet medicineMessage=`I found ${medicineNames.length} medicine(s) in your prescription: ${medicineNames.join(', ')}`;if(medsResponse.data.correction_summary&&medsResponse.data.correction_summary!==\"All medicine names were accurate.\"){medicineMessage+=`\\n\\n${medsResponse.data.correction_summary}`;}addMessage('ai',medicineMessage);// Step 3: Get detailed medicine information\nconst medInfoResponse=await axios.post(`${API_BASE_URL}/med-info`,{medicines:medicineNames});if(!medInfoResponse.data.success){throw new Error('Could not retrieve medicine information');}const medicinesInfo=medInfoResponse.data.medicines_info;setMedicines(medicinesInfo);// Add final AI message\naddMessage('ai',`I've analyzed your prescription and prepared detailed information for each medicine. You can view the details below.`);toast.success('Prescription processed successfully!');}catch(error){console.error('Error processing prescription:',error);// Check for Tesseract not installed error\nif(error.message&&error.message.includes('Tesseract OCR is not installed')){addMessage('ai',`Sorry, I encountered an error: Tesseract OCR is not installed on the server. Please contact the administrator to install Tesseract OCR.`);toast.error('Tesseract OCR is not installed on the server',{icon:/*#__PURE__*/_jsx(AlertTriangle,{className:\"text-amber-500\"}),duration:6000});}else{addMessage('ai',`Sorry, I encountered an error while processing your prescription: ${error.message}. Please try again with a clearer image.`);toast.error('Failed to process prescription. Please try again.');}}finally{setIsTyping(false);setIsProcessing(false);}};const handleFileUpload=file=>{setCurrentPrescriptionFile(file);processPrescription(file);};const clearResults=()=>{setMedicines([]);setMedicineCorrections([]);setExtractedText('');setMessages([]);setCurrentPrescriptionFile(null);setShowExerciseRecommendations(false);};const handleExerciseRecommendations=()=>{if(currentPrescriptionFile){setShowExerciseRecommendations(true);}else{toast.error('Please upload a prescription first');}};const handleChatMessage=async message=>{setIsChatProcessing(true);setIsTyping(true);try{// Add user message\naddMessage('user',message);// Get context from current medicines\nconst context=medicines.length>0?`Current medicines: ${medicines.map(m=>m.name).join(', ')}`:'';// Send to chat API\nconst response=await axios.post(`${API_BASE_URL}/chat`,{message:message,context:context});if(response.data.success){addMessage('ai',response.data.response);}else{addMessage('ai','Sorry, I encountered an error. Please try again.');}}catch(error){console.error('Chat error:',error);addMessage('ai','Sorry, I encountered an error while processing your message. Please try again.');}finally{setIsTyping(false);setIsChatProcessing(false);}};// Handle voice commands\nconst handleVoiceCommand=(transcript,confidence,result)=>{console.log('Voice command:',{transcript,confidence,result});if((result===null||result===void 0?void 0:result.action)==='navigate'){setCurrentPage(result.target);}// Add more voice command handling as needed\n};const handleInstallApp=async()=>{if(deferredPrompt){deferredPrompt.prompt();const{outcome}=await deferredPrompt.userChoice;if(outcome==='accepted'){console.log('User accepted the install prompt');}setDeferredPrompt(null);setShowInstallPrompt(false);}};const dismissInstallPrompt=()=>{setShowInstallPrompt(false);};const renderCurrentPage=()=>{switch(currentPage){case'dashboard':return/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Dashboard,{})});case'profile':return/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Profile,{})});case'privacy':return/*#__PURE__*/_jsx(Privacy,{});case'planner':return/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ExercisePlanner,{})});case'voice':return/*#__PURE__*/_jsx(VoiceInterface,{onVoiceCommand:handleVoiceCommand});case'chat':default:return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-3 gap-8 h-[calc(100vh-12rem)]\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-2\",children:/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{duration:0.5},className:\"glass-card rounded-2xl h-full flex flex-col\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 border-b border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-800 dark:text-gray-200\",children:\"Chat with Rx Assistant\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400 mt-1\",children:\"Ask questions about your medicines or upload a prescription\"})]}),/*#__PURE__*/_jsx(ChatBox,{messages:messages,isTyping:isTyping}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-t border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsx(ChatInput,{onSendMessage:handleChatMessage,isProcessing:isChatProcessing})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(UploadCard,{onFileUpload:handleFileUpload,isProcessing:isProcessing}),/*#__PURE__*/_jsx(AnimatePresence,{children:(medicines.length>0||extractedText)&&/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},exit:{opacity:0,y:-20},transition:{duration:0.5},className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-3\",children:[currentPrescriptionFile&&/*#__PURE__*/_jsxs(motion.button,{onClick:handleExerciseRecommendations,className:\"px-4 py-2 text-sm bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors flex items-center space-x-2\",whileHover:{scale:1.05},whileTap:{scale:0.95},children:[/*#__PURE__*/_jsx(Activity,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Get Exercise Recommendations\"})]}),/*#__PURE__*/_jsx(motion.button,{onClick:clearResults,className:\"px-4 py-2 text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 transition-colors\",whileHover:{scale:1.05},whileTap:{scale:0.95},children:\"Clear Results\"})]}),extractedText&&/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0},animate:{opacity:1},className:\"glass-card rounded-xl p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 mb-3\",children:[/*#__PURE__*/_jsx(FileText,{className:\"w-5 h-5 text-blue-600 dark:text-blue-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-gray-800 dark:text-gray-200\",children:\"Extracted Text\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-600 dark:text-gray-400 leading-relaxed\",children:extractedText})]}),medicineCorrections.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"w-5 h-5 text-yellow-600 dark:text-yellow-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-800 dark:text-gray-200\",children:\"Medicine Verification\"})]}),medicineCorrections.map((medicine,index)=>/*#__PURE__*/_jsx(MedicineCorrectionCard,{medicineData:medicine},index))]}),medicines.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(Bot,{className:\"w-5 h-5 text-green-600 dark:text-green-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-800 dark:text-gray-200\",children:\"Medicine Analysis\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:medicines.map((medicine,index)=>/*#__PURE__*/_jsx(MedicineCard,{medicine:medicine,index:index},index))})]})]})})]})]}),messages.length===0&&!isProcessing&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},className:\"text-center py-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-md mx-auto\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-20 h-20 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full flex items-center justify-center mx-auto mb-6\",children:/*#__PURE__*/_jsx(Bot,{className:\"w-10 h-10 text-white\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-2xl font-bold text-gray-800 dark:text-gray-200 mb-4\",children:\"Welcome to Rx Assistant\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400 mb-6\",children:\"Upload a prescription image to get detailed information about your medications, including dosage, side effects, and precautions.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center space-x-2 text-sm text-gray-500 dark:text-gray-400\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"This is for educational purposes only. Always consult a healthcare professional.\"})]})]})})]});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gradient-to-br from-primary-50 to-secondary-50 dark:from-gray-900 dark:to-gray-800\",children:[/*#__PURE__*/_jsx(Toaster,{position:\"top-right\",toastOptions:{duration:4000,style:{background:isDarkMode?'#374151':'#fff',color:isDarkMode?'#f9fafb':'#111827'}}}),showInstallPrompt&&/*#__PURE__*/_jsx(\"div\",{className:\"install-prompt\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"install-prompt-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Install Rx Assistant App\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Add Rx Assistant to your home screen for a better experience!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"install-prompt-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleInstallApp,className:\"btn btn-primary\",children:\"Install\"}),/*#__PURE__*/_jsx(\"button\",{onClick:dismissInstallPrompt,className:\"btn btn-secondary\",children:\"Maybe Later\"})]})]})}),/*#__PURE__*/_jsx(Header,{isDarkMode:isDarkMode,toggleDarkMode:toggleDarkMode}),/*#__PURE__*/_jsx(Navigation,{activeTab:currentPage,setActiveTab:setCurrentPage,isDarkMode:isDarkMode}),/*#__PURE__*/_jsx(\"main\",{className:\"safe-area-top safe-area-bottom\",children:renderCurrentPage()}),showExerciseRecommendations&&/*#__PURE__*/_jsx(ExerciseRecommendations,{prescriptionFile:currentPrescriptionFile,onClose:()=>setShowExerciseRecommendations(false)}),/*#__PURE__*/_jsx(AuthModal,{isOpen:showAuthModal,onClose:()=>setShowAuthModal(false),initialMode:authModalMode})]});}function AppWithAuth(){return/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(App,{})});}export default AppWithAuth;","map":{"version":3,"names":["React","useState","useEffect","motion","AnimatePresence","Toaster","toast","axios","AuthProvider","AuthModal","ProtectedRoute","Header","Navigation","ChatBox","ChatInput","UploadCard","MedicineCard","MedicineCorrectionCard","ExerciseRecommendations","Dashboard","Profile","Privacy","VoiceInterface","ExercisePlanner","Bot","FileText","AlertCircle","AlertTriangle","Activity","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","process","env","REACT_APP_API_URL","App","currentPage","setCurrentPage","isDarkMode","setIsDarkMode","deferredPrompt","setDeferredPrompt","showInstallPrompt","setShowInstallPrompt","messages","setMessages","isTyping","setIsTyping","isProcessing","setIsProcessing","medicines","setMedicines","medicineCorrections","setMedicineCorrections","extractedText","setExtractedText","isChatProcessing","setIsChatProcessing","showExerciseRecommendations","setShowExerciseRecommendations","currentPrescriptionFile","setCurrentPrescriptionFile","showAuthModal","setShowAuthModal","authModalMode","setAuthModalMode","document","documentElement","classList","add","remove","handleBeforeInstallPrompt","e","preventDefault","window","addEventListener","removeEventListener","handleOpenAuthModal","event","mode","detail","toggleDarkMode","addMessage","sender","content","newMessage","timestamp","Date","toISOString","prev","processPrescription","file","name","formData","FormData","append","ocrResponse","post","headers","data","success","Error","message","text","split","length","medsResponse","prescription_text","medicineData","medicineNames","map","med","corrected","medicineMessage","join","correction_summary","medInfoResponse","medicinesInfo","medicines_info","error","console","includes","icon","className","duration","handleFileUpload","clearResults","handleExerciseRecommendations","handleChatMessage","context","m","response","handleVoiceCommand","transcript","confidence","result","log","action","target","handleInstallApp","prompt","outcome","userChoice","dismissInstallPrompt","renderCurrentPage","children","onVoiceCommand","div","initial","opacity","x","animate","transition","onSendMessage","onFileUpload","y","exit","button","onClick","whileHover","scale","whileTap","medicine","index","position","toastOptions","style","background","color","activeTab","setActiveTab","prescriptionFile","onClose","isOpen","initialMode","AppWithAuth"],"sources":["C:/Users/Admin/Downloads/Tsunade/Tsunade/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Toaster, toast } from 'react-hot-toast';\nimport axios from 'axios';\nimport './styles/mobile.css';\nimport { AuthProvider } from './contexts/AuthContext';\nimport AuthModal from './components/AuthModal';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport Header from './components/Header';\nimport Navigation from './components/Navigation';\nimport ChatBox from './components/ChatBox';\nimport ChatInput from './components/ChatInput';\nimport UploadCard from './components/UploadCard';\nimport MedicineCard from './components/MedicineCard';\nimport MedicineCorrectionCard from './components/MedicineCorrectionCard';\nimport ExerciseRecommendations from './components/ExerciseRecommendations';\nimport Dashboard from './components/Dashboard';\nimport Profile from './components/Profile';\nimport Privacy from './components/Privacy';\nimport VoiceInterface from './components/VoiceInterface';\nimport ExercisePlanner from './components/ExercisePlanner';\nimport { Bot, FileText, AlertCircle, AlertTriangle, Activity } from 'lucide-react';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState('chat');\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [deferredPrompt, setDeferredPrompt] = useState(null);\n  const [showInstallPrompt, setShowInstallPrompt] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [medicines, setMedicines] = useState([]);\n  const [medicineCorrections, setMedicineCorrections] = useState([]);\n  const [extractedText, setExtractedText] = useState('');\n  const [isChatProcessing, setIsChatProcessing] = useState(false);\n  const [showExerciseRecommendations, setShowExerciseRecommendations] = useState(false);\n  const [currentPrescriptionFile, setCurrentPrescriptionFile] = useState(null);\n  const [showAuthModal, setShowAuthModal] = useState(false);\n  const [authModalMode, setAuthModalMode] = useState('login');\n\n  // Dark mode effect\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [isDarkMode]);\n\n  // PWA install prompt handling\n  useEffect(() => {\n    const handleBeforeInstallPrompt = (e) => {\n      e.preventDefault();\n      setDeferredPrompt(e);\n      setShowInstallPrompt(true);\n    };\n    \n    window.addEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n    \n    return () => {\n      window.removeEventListener('beforeinstallprompt', handleBeforeInstallPrompt);\n    };\n  }, []);\n\n  // Auth modal event handling\n  useEffect(() => {\n    const handleOpenAuthModal = (event) => {\n      const { mode } = event.detail || {};\n      setAuthModalMode(mode || 'login');\n      setShowAuthModal(true);\n    };\n\n    window.addEventListener('openAuthModal', handleOpenAuthModal);\n\n    return () => {\n      window.removeEventListener('openAuthModal', handleOpenAuthModal);\n    };\n  }, []);\n\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  const addMessage = (sender, content) => {\n    const newMessage = {\n      sender,\n      content,\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, newMessage]);\n  };\n\n  const processPrescription = async (file) => {\n    setIsProcessing(true);\n    setIsTyping(true);\n    \n    try {\n      // Add user message\n      addMessage('user', `Uploaded prescription: ${file.name}`);\n      \n      // Step 1: Extract text using OCR\n      const formData = new FormData();\n      formData.append('file', file);\n      \n      const ocrResponse = await axios.post(`${API_BASE_URL}/ocr`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      \n      if (!ocrResponse.data.success) {\n        throw new Error(ocrResponse.data.message);\n      }\n      \n      const extractedText = ocrResponse.data.text;\n      setExtractedText(extractedText);\n      \n      // Add AI message about OCR\n      addMessage('ai', `I've extracted the text from your prescription. Found ${extractedText.split(' ').length} words.`);\n      \n      // Step 2: Extract medicine names\n      const medsResponse = await axios.post(`${API_BASE_URL}/extract-meds`, {\n        prescription_text: extractedText\n      });\n      \n      if (!medsResponse.data.success) {\n        throw new Error('Could not identify medicines in the prescription');\n      }\n      \n      const medicineData = medsResponse.data.medicines;\n      const medicineNames = medicineData.map(med => med.corrected);\n      \n      // Store correction data for display\n      setMedicineCorrections(medicineData);\n      \n      // Add AI message about medicines found with corrections\n      let medicineMessage = `I found ${medicineNames.length} medicine(s) in your prescription: ${medicineNames.join(', ')}`;\n      \n      if (medsResponse.data.correction_summary && medsResponse.data.correction_summary !== \"All medicine names were accurate.\") {\n        medicineMessage += `\\n\\n${medsResponse.data.correction_summary}`;\n      }\n      \n      addMessage('ai', medicineMessage);\n      \n      // Step 3: Get detailed medicine information\n      const medInfoResponse = await axios.post(`${API_BASE_URL}/med-info`, {\n        medicines: medicineNames\n      });\n      \n      if (!medInfoResponse.data.success) {\n        throw new Error('Could not retrieve medicine information');\n      }\n      \n      const medicinesInfo = medInfoResponse.data.medicines_info;\n      setMedicines(medicinesInfo);\n      \n      // Add final AI message\n      addMessage('ai', `I've analyzed your prescription and prepared detailed information for each medicine. You can view the details below.`);\n      \n      toast.success('Prescription processed successfully!');\n      \n    } catch (error) {\n      console.error('Error processing prescription:', error);\n      \n      // Check for Tesseract not installed error\n      if (error.message && error.message.includes('Tesseract OCR is not installed')) {\n        addMessage('ai', `Sorry, I encountered an error: Tesseract OCR is not installed on the server. Please contact the administrator to install Tesseract OCR.`);\n        toast.error('Tesseract OCR is not installed on the server', {\n          icon: <AlertTriangle className=\"text-amber-500\" />,\n          duration: 6000\n        });\n      } else {\n        addMessage('ai', `Sorry, I encountered an error while processing your prescription: ${error.message}. Please try again with a clearer image.`);\n        toast.error('Failed to process prescription. Please try again.');\n      }\n    } finally {\n      setIsTyping(false);\n      setIsProcessing(false);\n    }\n  };\n\n  const handleFileUpload = (file) => {\n    setCurrentPrescriptionFile(file);\n    processPrescription(file);\n  };\n\n  const clearResults = () => {\n    setMedicines([]);\n    setMedicineCorrections([]);\n    setExtractedText('');\n    setMessages([]);\n    setCurrentPrescriptionFile(null);\n    setShowExerciseRecommendations(false);\n  };\n\n  const handleExerciseRecommendations = () => {\n    if (currentPrescriptionFile) {\n      setShowExerciseRecommendations(true);\n    } else {\n      toast.error('Please upload a prescription first');\n    }\n  };\n\n  const handleChatMessage = async (message) => {\n    setIsChatProcessing(true);\n    setIsTyping(true);\n    \n    try {\n      // Add user message\n      addMessage('user', message);\n      \n      // Get context from current medicines\n      const context = medicines.length > 0 \n        ? `Current medicines: ${medicines.map(m => m.name).join(', ')}`\n        : '';\n      \n      // Send to chat API\n      const response = await axios.post(`${API_BASE_URL}/chat`, {\n        message: message,\n        context: context\n      });\n      \n      if (response.data.success) {\n        addMessage('ai', response.data.response);\n      } else {\n        addMessage('ai', 'Sorry, I encountered an error. Please try again.');\n      }\n      \n    } catch (error) {\n      console.error('Chat error:', error);\n      addMessage('ai', 'Sorry, I encountered an error while processing your message. Please try again.');\n    } finally {\n      setIsTyping(false);\n      setIsChatProcessing(false);\n    }\n  };\n\n  // Handle voice commands\n  const handleVoiceCommand = (transcript, confidence, result) => {\n    console.log('Voice command:', { transcript, confidence, result });\n    \n    if (result?.action === 'navigate') {\n      setCurrentPage(result.target);\n    }\n    // Add more voice command handling as needed\n  };\n\n  const handleInstallApp = async () => {\n    if (deferredPrompt) {\n      deferredPrompt.prompt();\n      const { outcome } = await deferredPrompt.userChoice;\n      if (outcome === 'accepted') {\n        console.log('User accepted the install prompt');\n      }\n      setDeferredPrompt(null);\n      setShowInstallPrompt(false);\n    }\n  };\n  \n  const dismissInstallPrompt = () => {\n    setShowInstallPrompt(false);\n  };\n\n  const renderCurrentPage = () => {\n    switch (currentPage) {\n      case 'dashboard':\n        return (\n          <ProtectedRoute>\n            <Dashboard />\n          </ProtectedRoute>\n        );\n      case 'profile':\n        return (\n          <ProtectedRoute>\n            <Profile />\n          </ProtectedRoute>\n        );\n      case 'privacy':\n        return <Privacy />;\n      case 'planner':\n        return (\n          <ProtectedRoute>\n            <ExercisePlanner />\n          </ProtectedRoute>\n        );\n      case 'voice':\n        return <VoiceInterface onVoiceCommand={handleVoiceCommand} />;\n      case 'chat':\n      default:\n        return (\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8 h-[calc(100vh-12rem)]\">\n              \n              {/* Chat Area - Left Side */}\n              <div className=\"lg:col-span-2\">\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.5 }}\n                  className=\"glass-card rounded-2xl h-full flex flex-col\"\n                >\n                  <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n                    <h2 className=\"text-xl font-semibold text-gray-800 dark:text-gray-200\">\n                      Chat with Rx Assistant\n                    </h2>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                      Ask questions about your medicines or upload a prescription\n                    </p>\n                  </div>\n                  \n                  <ChatBox messages={messages} isTyping={isTyping} />\n                  \n                  {/* Chat Input */}\n                  <div className=\"p-4 border-t border-gray-200 dark:border-gray-700\">\n                    <ChatInput onSendMessage={handleChatMessage} isProcessing={isChatProcessing} />\n                  </div>\n                </motion.div>\n              </div>\n              \n              {/* Upload & Results Area - Right Side */}\n              <div className=\"space-y-6\">\n                {/* Upload Card */}\n                <UploadCard \n                  onFileUpload={handleFileUpload}\n                  isProcessing={isProcessing}\n                />\n                \n                {/* Results Section */}\n                <AnimatePresence>\n                  {(medicines.length > 0 || extractedText) && (\n                    <motion.div\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0, y: -20 }}\n                      transition={{ duration: 0.5 }}\n                      className=\"space-y-4\"\n                    >\n                      {/* Action Buttons */}\n                      <div className=\"flex justify-end space-x-3\">\n                        {currentPrescriptionFile && (\n                          <motion.button\n                            onClick={handleExerciseRecommendations}\n                            className=\"px-4 py-2 text-sm bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors flex items-center space-x-2\"\n                            whileHover={{ scale: 1.05 }}\n                            whileTap={{ scale: 0.95 }}\n                          >\n                            <Activity className=\"w-4 h-4\" />\n                            <span>Get Exercise Recommendations</span>\n                          </motion.button>\n                        )}\n                        <motion.button\n                          onClick={clearResults}\n                          className=\"px-4 py-2 text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 transition-colors\"\n                          whileHover={{ scale: 1.05 }}\n                          whileTap={{ scale: 0.95 }}\n                        >\n                          Clear Results\n                        </motion.button>\n                      </div>\n                      \n                      {/* Extracted Text (Optional) */}\n                      {extractedText && (\n                        <motion.div\n                          initial={{ opacity: 0 }}\n                          animate={{ opacity: 1 }}\n                          className=\"glass-card rounded-xl p-4\"\n                        >\n                          <div className=\"flex items-center space-x-2 mb-3\">\n                            <FileText className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" />\n                            <h3 className=\"text-sm font-medium text-gray-800 dark:text-gray-200\">\n                              Extracted Text\n                            </h3>\n                          </div>\n                          <p className=\"text-xs text-gray-600 dark:text-gray-400 leading-relaxed\">\n                            {extractedText}\n                          </p>\n                        </motion.div>\n                      )}\n                      \n                      {/* Medicine Corrections */}\n                      {medicineCorrections.length > 0 && (\n                        <div className=\"space-y-4\">\n                          <div className=\"flex items-center space-x-2\">\n                            <AlertTriangle className=\"w-5 h-5 text-yellow-600 dark:text-yellow-400\" />\n                            <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">\n                              Medicine Verification\n                            </h3>\n                          </div>\n                          \n                          {medicineCorrections.map((medicine, index) => (\n                            <MedicineCorrectionCard \n                              key={index} \n                              medicineData={medicine}\n                            />\n                          ))}\n                        </div>\n                      )}\n                      \n                      {/* Medicines List */}\n                      {medicines.length > 0 && (\n                        <div className=\"space-y-4\">\n                          <div className=\"flex items-center space-x-2\">\n                            <Bot className=\"w-5 h-5 text-green-600 dark:text-green-400\" />\n                            <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200\">\n                              Medicine Analysis\n                            </h3>\n                          </div>\n                          \n                          <div className=\"space-y-4\">\n                            {medicines.map((medicine, index) => (\n                              <MedicineCard \n                                key={index} \n                                medicine={medicine} \n                                index={index}\n                              />\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n              </div>\n            </div>\n            \n            {/* Welcome Message */}\n            {messages.length === 0 && !isProcessing && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                className=\"text-center py-12\"\n              >\n                <div className=\"max-w-md mx-auto\">\n                  <div className=\"w-20 h-20 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full flex items-center justify-center mx-auto mb-6\">\n                    <Bot className=\"w-10 h-10 text-white\" />\n                  </div>\n                  <h3 className=\"text-2xl font-bold text-gray-800 dark:text-gray-200 mb-4\">\n                    Welcome to Rx Assistant\n                  </h3>\n                  <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\n                    Upload a prescription image to get detailed information about your medications, including dosage, side effects, and precautions.\n                  </p>\n                  <div className=\"flex items-center justify-center space-x-2 text-sm text-gray-500 dark:text-gray-400\">\n                    <AlertCircle className=\"w-4 h-4\" />\n                    <span>This is for educational purposes only. Always consult a healthcare professional.</span>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-primary-50 to-secondary-50 dark:from-gray-900 dark:to-gray-800\">\n      <Toaster \n        position=\"top-right\"\n        toastOptions={{\n          duration: 4000,\n          style: {\n            background: isDarkMode ? '#374151' : '#fff',\n            color: isDarkMode ? '#f9fafb' : '#111827',\n          },\n        }}\n      />\n      \n      {/* PWA Install Prompt */}\n      {showInstallPrompt && (\n        <div className=\"install-prompt\">\n          <div className=\"install-prompt-content\">\n            <h3>Install Rx Assistant App</h3>\n            <p>Add Rx Assistant to your home screen for a better experience!</p>\n            <div className=\"install-prompt-actions\">\n              <button onClick={handleInstallApp} className=\"btn btn-primary\">\n                Install\n              </button>\n              <button onClick={dismissInstallPrompt} className=\"btn btn-secondary\">\n                Maybe Later\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      <Header isDarkMode={isDarkMode} toggleDarkMode={toggleDarkMode} />\n      <Navigation activeTab={currentPage} setActiveTab={setCurrentPage} isDarkMode={isDarkMode} />\n      \n      <main className=\"safe-area-top safe-area-bottom\">\n        {renderCurrentPage()}\n      </main>\n      \n      {/* Exercise Recommendations Modal */}\n      {showExerciseRecommendations && (\n        <ExerciseRecommendations \n          prescriptionFile={currentPrescriptionFile}\n          onClose={() => setShowExerciseRecommendations(false)}\n        />\n      )}\n\n      {/* Authentication Modal */}\n      <AuthModal\n        isOpen={showAuthModal}\n        onClose={() => setShowAuthModal(false)}\n        initialMode={authModalMode}\n      />\n    </div>\n  );\n}\n\nfunction AppWithAuth() {\n  return (\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  );\n}\n\nexport default AppWithAuth;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}